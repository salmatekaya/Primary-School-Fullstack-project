{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Finalversionproject\\\\primary-school-frontend\\\\src\\\\pages\\\\Teacher\\\\StudentMangement\\\\StudentMangement.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Axios from 'axios';\nimport useTable from '../../../components/useTable';\nimport { TableBody } from '@material-ui/core';\nimport Popup from '../../../components/Popup';\nimport AddStudent from './AddStudent';\nimport EditableRowStudent from './EditableRowStudent';\nimport ReadOnlyRowStudent from './ReadOnlyRowStudent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst headCells = [{\n  id: 'actions',\n  label: 'أجراءات'\n}, {\n  id: 'gender',\n  label: ' الجنس'\n}, {\n  id: 'birthdate',\n  label: 'تاريخ الولادة'\n}, {\n  id: 'lastName',\n  label: 'اللقب'\n}, {\n  id: 'firstName',\n  label: 'الاسم'\n}, {\n  id: 'inscri',\n  label: 'رقم التسجيل'\n}];\n\nconst StudentMangement = () => {\n  _s();\n\n  const [editStudentId, setEditStudentId] = useState(null);\n  const [editFormData, setEditFormData] = useState({\n    id: 0,\n    firstname: \"\",\n    lastname: \"\",\n    gender: \"female\",\n    birthdate: new Date()\n  });\n  const [firstname, setFirstName] = useState('');\n  const [newFirstname, setNewFirstname] = useState('');\n  const [lastname, setLastname] = useState();\n  const [newLastname, setNewLastname] = useState('');\n  const [newGender, setNewGender] = useState('');\n  const [newBirthDate, setNewBirthDate] = useState('');\n  const [studentList, setStudentList] = useState([]);\n  const [newStudentList, setNewStudentList] = useState([]);\n  const [openPopup, setOpenPopup] = useState(false);\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n\n  const {\n    TblContainer,\n    TblHead\n  } = useTable(studentList, headCells);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3000/api/getStudents\").then(response => {\n      setStudentList(response.data);\n    });\n  }, []);\n\n  const handleEditClick = (event, val) => {\n    event.preventDefault();\n    setEditStudentId(val.id_eleve);\n    const formValues = {\n      firstname: val.prenom,\n      lastname: val.nom,\n      gender: val.sexe,\n      birthdate: val.date_naissance,\n      inscri: val.num_inscription\n    };\n    setEditFormData(formValues);\n  };\n\n  const handleEditChange = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const newData = { ...editFormData\n    };\n    newData[fieldName] = fieldValue;\n  };\n\n  const deleteStudent = id_eleve => {\n    Axios.delete(`http://localhost:3000/api/deleteStudent/${id_eleve}`);\n    console.log('deleted');\n    console.log(id_eleve);\n  };\n\n  const updateStudentFirstname = id => {\n    Axios.put(\"http://localhost:3000/updateStudentFirstname\", {\n      firstname: newFirstname,\n      id_eleve: id\n    });\n    console.log(newFirstname);\n    console.log(id);\n  };\n\n  const updateStudentLastname = id => {\n    Axios.put(\"http://localhost:3000/updateStudentLastname\", {\n      lastname: newLastname,\n      id_enseignant: id\n    });\n    console.log(newLastname);\n  };\n\n  const updateStudentGender = id => {\n    Axios.put(\"http://localhost:3000/updateStudentGender\", {\n      gender: newGender,\n      id_enseignant: id\n    });\n    console.log(newGender);\n  };\n\n  const updateStudentBirthdate = id => {\n    Axios.put(\"http://localhost:3000/updateStudentBirthdate\", {\n      Birthdate: newBirthDate,\n      id_enseignant: id\n    });\n    console.log(newBirthDate);\n  };\n\n  const handleCancelClick = () => {\n    setEditStudentId(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      class: \"ui right floated blue basic button\",\n      onClick: () => {\n        setOpenPopup(true);\n      },\n      children: \"\\u0627\\u0636\\u0627\\u0641\\u0629\\u0627\\u0644\\u062A\\u0644\\u0627\\u0645\\u064A\\u0630 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TblContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TblHead, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: studentList.map(val => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: editStudentId === val.id_eleve ? /*#__PURE__*/_jsxDEV(EditableRowStudent, {\n            editFormData: editFormData,\n            handleEditChange: handleEditClick,\n            setNewFirstname: setNewFirstname,\n            setNewLastname: setNewLastname,\n            setNewGender: setNewGender,\n            setNewBirthDate: setNewBirthDate,\n            val: val,\n            refreshPage: refreshPage,\n            updateStudentFirstname: updateStudentFirstname,\n            updateStudentLastname: updateStudentLastname,\n            updateStudentGender: updateStudentGender,\n            updateStudentBirthdate: updateStudentBirthdate,\n            newStudentList: newStudentList,\n            handleCancelClick: handleCancelClick,\n            handleEditChange: handleEditChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(ReadOnlyRowStudent, {\n            val: val,\n            handleEditClick: handleEditClick,\n            deleteStudent: deleteStudent,\n            refreshPage: refreshPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 23\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      openPopup: openPopup,\n      setOpenPopup: setOpenPopup,\n      children: /*#__PURE__*/_jsxDEV(AddStudent, {\n        setOpenPopup: setOpenPopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StudentMangement, \"AI6tx3g0iCrt8VnHd117vPCKw5E=\", false, function () {\n  return [useTable];\n});\n\n_c = StudentMangement;\nexport default StudentMangement;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentMangement\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/Finalversionproject/primary-school-frontend/src/pages/Teacher/StudentMangement/StudentMangement.js"],"names":["React","useState","useEffect","Button","Axios","useTable","TableBody","Popup","AddStudent","EditableRowStudent","ReadOnlyRowStudent","headCells","id","label","StudentMangement","editStudentId","setEditStudentId","editFormData","setEditFormData","firstname","lastname","gender","birthdate","Date","setFirstName","newFirstname","setNewFirstname","setLastname","newLastname","setNewLastname","newGender","setNewGender","newBirthDate","setNewBirthDate","studentList","setStudentList","newStudentList","setNewStudentList","openPopup","setOpenPopup","refreshPage","window","location","reload","TblContainer","TblHead","get","then","response","data","handleEditClick","event","val","preventDefault","id_eleve","formValues","prenom","nom","sexe","date_naissance","inscri","num_inscription","handleEditChange","fieldName","target","getAttribute","fieldValue","value","newData","deleteStudent","delete","console","log","updateStudentFirstname","put","updateStudentLastname","id_enseignant","updateStudentGender","updateStudentBirthdate","Birthdate","handleCancelClick","map"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Axios from 'axios';\r\nimport useTable from '../../../components/useTable';\r\nimport { TableBody } from '@material-ui/core';\r\nimport Popup from '../../../components/Popup';\r\nimport AddStudent from './AddStudent';\r\nimport EditableRowStudent from './EditableRowStudent';\r\nimport ReadOnlyRowStudent from './ReadOnlyRowStudent'\r\n\r\nconst headCells=[\r\n    {id:'actions',label:'أجراءات'},\r\n    {id:'gender', label:' الجنس'},\r\n    {id:'birthdate',label:'تاريخ الولادة'},\r\n    {id:'lastName', label:'اللقب'},\r\n    {id:'firstName', label:'الاسم'},\r\n    {id:'inscri', label:'رقم التسجيل'},\r\n\r\n]\r\n\r\nconst StudentMangement = () => {\r\n  const [editStudentId,setEditStudentId] = useState(null);\r\n  const [editFormData,setEditFormData]=useState({\r\n    id:0,\r\n    firstname:\"\",\r\n    lastname:\"\",\r\n    gender:\"female\",\r\n    birthdate:new Date(),\r\n  })\r\n\r\n\r\n  const [firstname,setFirstName]=useState('');\r\n  const [newFirstname,setNewFirstname]=useState('');\r\n\r\n  const [lastname,setLastname]=useState();\r\n  const [newLastname,setNewLastname]=useState('');\r\n\r\n  const [newGender,setNewGender]=useState('');\r\n  const [newBirthDate,setNewBirthDate]=useState('');\r\n\r\n  const [studentList, setStudentList]=useState([]);\r\n  const [newStudentList,setNewStudentList]=useState([]);\r\n\r\n  const [openPopup,setOpenPopup]=useState(false);\r\n\r\n  function refreshPage() {\r\n    window.location.reload(false); \r\n  }\r\n\r\n  const {\r\n      TblContainer,\r\n      TblHead\r\n    }=useTable(studentList,headCells);\r\n\r\n  useEffect(()=>{\r\n    Axios.get(\"http://localhost:3000/api/getStudents\").then((response)=>{\r\n      setStudentList(response.data)\r\n    })\r\n  },[])\r\n\r\n  const handleEditClick = (event,val) => {\r\n    event.preventDefault();\r\n    setEditStudentId(val.id_eleve);\r\n\r\n    const formValues={\r\n      firstname:val.prenom,\r\n      lastname:val.nom,\r\n      gender:val.sexe,\r\n      birthdate:val.date_naissance,\r\n      inscri:val.num_inscription  \r\n    }\r\n    setEditFormData(formValues);\r\n  };\r\n\r\n  const handleEditChange=(event)=>{\r\n    event.preventDefault();\r\n\r\n    const fieldName=event.target.getAttribute(\"name\");\r\n    const fieldValue=event.target.value;\r\n\r\n    const newData={...editFormData};\r\n    newData[fieldName]=fieldValue;\r\n  }\r\n\r\n  const deleteStudent = (id_eleve) => {\r\n    Axios.delete(`http://localhost:3000/api/deleteStudent/${id_eleve}`)\r\n    console.log('deleted');\r\n    console.log(id_eleve);\r\n  };\r\n\r\n  const updateStudentFirstname=(id)=>{\r\n    Axios.put(\"http://localhost:3000/updateStudentFirstname\",{\r\n        firstname:newFirstname,id_eleve:id\r\n    });\r\n      console.log(newFirstname);\r\n      console.log(id)\r\n  }\r\n\r\n  const updateStudentLastname=(id)=>{\r\n    Axios.put(\"http://localhost:3000/updateStudentLastname\",{\r\n      lastname:newLastname,id_enseignant:id\r\n    });\r\n      console.log(newLastname); \r\n  }\r\n\r\n  const updateStudentGender=(id)=>{\r\n    Axios.put(\"http://localhost:3000/updateStudentGender\",{\r\n      gender:newGender,id_enseignant:id,\r\n    });\r\n      console.log(newGender);\r\n  }\r\n\r\n  const updateStudentBirthdate=(id)=>{\r\n    Axios.put(\"http://localhost:3000/updateStudentBirthdate\",{\r\n      Birthdate:newBirthDate,id_enseignant:id\r\n    });\r\n      console.log(newBirthDate);\r\n  }\r\n\r\n  const handleCancelClick=()=>{\r\n    setEditStudentId(null);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <Button class=\"ui right floated blue basic button\" onClick={()=> {setOpenPopup(true)}}>اضافةالتلاميذ </Button>\r\n        <TblContainer >\r\n            <TblHead/>\r\n            <TableBody >\r\n                {studentList.map((val)=>(\r\n                      <React.Fragment>  \r\n                        {editStudentId === val.id_eleve?  ( \r\n                        <EditableRowStudent \r\n                          editFormData={editFormData}\r\n                          handleEditChange={handleEditClick}\r\n                          setNewFirstname={setNewFirstname}\r\n                          setNewLastname={setNewLastname}\r\n                          setNewGender={setNewGender} \r\n                          setNewBirthDate={setNewBirthDate}\r\n                          val={val} \r\n                          refreshPage={refreshPage}\r\n                          updateStudentFirstname={updateStudentFirstname}\r\n                          updateStudentLastname={updateStudentLastname}\r\n                          updateStudentGender={updateStudentGender}\r\n                          updateStudentBirthdate={updateStudentBirthdate}\r\n                          newStudentList={newStudentList} \r\n                          handleCancelClick={handleCancelClick}\r\n                          handleEditChange={handleEditChange}\r\n                        /> \r\n                        ) : (\r\n                          <ReadOnlyRowStudent val={val}\r\n                            handleEditClick={handleEditClick} \r\n                            deleteStudent={deleteStudent}\r\n                            refreshPage={refreshPage}\r\n                          />\r\n                        )\r\n                        }\r\n                      </React.Fragment>\r\n                ))}\r\n            </TableBody>\r\n        </TblContainer>\r\n\r\n        <Popup\r\n        openPopup={openPopup}\r\n        setOpenPopup={setOpenPopup}\r\n        >\r\n            <AddStudent setOpenPopup={setOpenPopup}/>\r\n        </Popup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StudentMangement;"]},"metadata":{},"sourceType":"module"}